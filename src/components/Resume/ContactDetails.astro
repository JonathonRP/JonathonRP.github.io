---
	interface Basics {
			location?: {
				address: string;
				city: string;
				countryCode: string;
				postalCode: string;
				region: string;
			};
			phone?: string;
			email?: string;
			profiles?: { network: string; username: string; url: string }[];
	};
	const {  location, phone, email, profiles = [], ...restProps }: Basics = Astro.props;
	const rows = [location, phone, email, ...profiles].filter(Boolean).length;
---

<section class="contact-details" {...restProps}>
	<slot />
	{location &&
		<span class="contact-details__text" aria-label="{location.city}, {location.region}">
			<p>{location.city}, {location.region}</p>
		</span>
		<span class="contact-details__icon location" />
	}
	{phone &&
		<span class="contact-details__text"><p>{phone}</p></span>
		<span class="contact-details__icon phone" />
	}
	{email &&
		<span class="contact-details__link">
			<a href="mailto:{email}" rel="external nofollow noopener noreferrer" target="blank">{email}</a>
		</span>
		<span class="contact-details__icon email" />
	}

	{profiles &&
		profiles.map(profile =>
			<span class="contact-details__link">
				<a href={profile.url} rel="external nofollow noopener noreferrer" target="blank">{profile.username}</a>
			</span>
			<span class:list={['contact-details__icon', profile.network.toLowerCase()]} />)
	}
</section>

<style lang="scss" define:vars={{ 'grid-rows': rows }}>
	@use '@/styles/abstracts/mixins' as *;

	a {
		&::after {
			content: none;
		}
	}

	.contact-details {
		display: none;
		grid-template-columns: 160px 25px;
		// column-gap: 0.5em;
		align-items: center;
		justify-items: end;
		position: relative;
		font-size: 0.85rem;

		&[data-visibility='mobile'] {
			display: grid;
			grid-template-rows: 50px repeat(var(--grid-rows), 25px);
			// padding-inline: 0;

			&::before {
				content: '';
				border-right: 2px solid var(--primary-color);
				position: absolute;
				top: 62px;
				height: 60%;
				width: 13.5em;
			}

			@include headings() {
				grid-column: span 2;
				grid-row: 1;
			}

			.heading {
				width: 100%;
			}

			@include respond-to(lg) {
				display: none;
			}
		}

		&[data-visibility='desktop'] {
			grid-template-rows: repeat(var(--grid-rows), 25px);

			@include respond-to(lg) {
				display: grid;
			}
		}

		&__text,
		&__link {
			grid-column: 1;
			// text-align: center;
		}

		&__icon {
			// font-size: 20px;
			// padding-inline-end: var(--small-space);
			// text-align: center;
			color: var(--accent-color);
		}
	}
</style>
