---
import Content from "./Content.astro";

interface Props {
  title?: string;
  body?: string;
  colSpan?: number;
  rowSpan?: number;
  href?: string;
  colorText?: string;
  height?: string;
  width?: string;
}

const { title, body, colSpan, rowSpan, href, colorText, height } = Astro.props;
---

<div
  class="card"
>
    <Content title={title} body={body}>
        <slot />
    </Content>
</div>

<style lang="scss" define:vars={{ height, colSpan, rowSpan }}>
  .card {
    --shadow: var(--shadow-inset) 0 10px 15px -3px var(--shadow-color, rgb(0 0 0 / 0.1)), var(--shadow-inset) 0 4px 6px -4px var(--shadow-color, rgb(0 0 0 / 0.1));
    height: max-content;
    height: var(--height, 100%);
    overflow: hidden;
    border-radius: 0.5rem;
    // background-color: rgb(23 23 23 / var(--bg-opacity, 1));
    // background-color: var(--darkslate-500);
    background-color: color-mix(in srgb, var(--text-color) 4%, var(--bg-color));
    padding: 1.5rem;
    border-width: 1px;
    // border-color: rgb(44 44 44 / var(--border-opacity, 1));
    // border-color: rgb(94 94 94 / var(--border-opacity, 1));
    // border-color: var(--darkslate-100);
    border-color: color-mix(in srgb, var(--text-color) 15%, var(--bg-color));
    border-style: solid;
    box-shadow: var(--ring-offset-shadow, 0 0 rgb(0 0 0 / 0)), var(--ring-shadow, 0 0 rgb(0 0 0 / 0)), var(--shadow);
    vertical-align: top;
    justify-content: flex-start;
    flex: none;
    width: 100%;
    perspective: 1200px;
    position: relative;
    grid-column: span 1 / span 1;

    &:hover {
      // border-color: rgb(230 57 70 / var(--border-opacity, 1));
      // border-color: var(--primary-500);
      border-color: var(--accent-color);
    }

    @media (min-width: 640px) {
      height: auto;
    }

    @media (min-width: 768px) {
      grid-column: span var(--colSpan, 2) / span var(--colSpan, 2);
      grid-row: span var(--rowSpan, auto) / span var(--rowSpan, auto);
    }
  }
</style>