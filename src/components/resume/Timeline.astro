---
import { Certificates, Education, Work } from '@/lib';
import { Image } from 'astro:assets';
import { format, parseISO } from 'date-fns';

type TimelineItemType = Work | Education | Certificates;

interface Props {
	experiences: {
		image: string;
		startDate?: string;
		endDate?: string;
		date?: string;
		eventDate?: string;
		name?: string;
		institution?: string;
		position?: string;
		issuer?: string;
		area?: string;
		summary?: string;
		useSummary?: boolean;
		highlights?: string[];
		studyType?: string;
	}[];
	type: TimelineItemType;
}

const {
	experiences,
	type,
} = Astro.props;
---

{
	type.heading &&
			(
		<h2
			id="{type.heading.id}-title"
			class="timeline__section-heading"
		>
			{type.heading.title}
		</h2>
	) ||
		(
		<h2 class="timeline__section-heading" data-sr-only>
			Experience
		</h2>
	)
}
<div class="timeline" data-type={type.experience}>
	{
		experiences.map(({
		startDate,
		endDate,
		date,
		eventDate = format(
			parseISO(
				(type.work ? startDate : type.certificates ? date : endDate) ?? '',
			),
			'MMM yyyy',
		),
		...experience
	}, indx) => {
		const alt = experience.image.split('.').reverse().pop() + ' Logo.';
		return (
			<div class="timeline__item">
				<time class="timeline__duration" datetime={eventDate}>{eventDate}</time>
				{
					experience.image && (
						<div class="timeline__logo">
							<Image
								src={`/logos/${experience.image}`}
								`
								format="webp"
								{alt}
								width="42"
								height="42"
								loading={indx < 2 ? 'eager' : 'lazy'}
								decoding="sync"
							/>
						</div>
					) || <div class="timeline__point"></div>
				}
				<div class="timeline__content">
					<div style="width: 100%">
						<h3 class="timeline__header">
							{type.education ? experience.institution : experience.name}
						</h3>
						<div class="timeline__body">
							{
								type.work && (
									<h4 class="timeline__sub">{experience.position}</h4>
									<>
										{experience.useSummary && <p>{experience.summary}</p>}
										{
											experience.highlights && (
												<ul class="timeline__responsabilities-achievements [ flow ]">
													{
														experience?.highlights?.map((highlight) => (
															<li>
																{highlight}
															</li>
														))
													}
												</ul>
											)
										}
									</>
								) ||
		type.certificates && (
									<p class="timeline__issuer">
										{experience.issuer}
									</p>
								) ||
		type.education && (
									<h4 class="timeline__sub">{experience.area}</h4>
									<p class="timeline__degree">
										{experience.studyType}
									</p>
								)
							}
						</div>
					</div>
					<span class="timeline__icon" data-icon={type.icon} />
				</div>
			</div>
		);
	})
	}
</div>
