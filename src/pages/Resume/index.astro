 ---
	import '@/styles/utilities/_index.scss';
	import { hash, linq } from '../../utils';
	import website from '../../website.config';
	import { basics, work, certificates, education, skills, projects } from '../../data/resume.json';

	import AppLayout from '../app.astro';
	import SEO from '../../components/SEO/index.svelte';
	import ContactDetails from '../../components/Resume/ContactDetails.astro';
	import Timeline from '../../components/Resume/Timeline.svelte';
	import TagsCatalog from '../../components/Resume/TagsCatalog.svelte';

	const pageTitle = 'Resume',
		metadescription =
			'Hard working and detail oriented professional, seeking a software development position where I can use my skills and contribute to the growth of a company.',
		slug = '/Resume',
		{ author } = website;

	const breadcrumbs = [
		{
			name: 'Home',
			slug: Astro.url.origin,
		},
		{
			name: pageTitle,
			slug,
		},
	];

	const entityMeta = {
		url: slug,
		faviconWidth: 512,
		faviconHeight: 512,
		caption: author,
	};

	const seo = {
		article: false,
		title: pageTitle,
		slug,
		entityMeta,
		breadcrumbs,
		metadescription,
	};
---

<AppLayout>
<SEO {...seo} />

<main id="resume" class="resume">
	<!-- Profile -->
	<header class="profile [ flow ]">
		<!-- Introduction -->
		<div aria-label="Introduction">
			<h1 aria-label={basics.name}>{basics.name}</h1>
			<h2 aria-label={basics.label}>{basics.label}</h2>
		</div>

		<!-- Objective Statement -->
		<p class="text-accent">
			{basics.summary}
		</p>

		<!-- Contact Details -->
		<ContactDetails {...basics} aria-label="Details" data-visibility="desktop" />
	</header>

	<!-- Relevant Experience History -->
	<section class="[ lg:grid-column ]" aria-label="Relevant Experience History">
		<section class="experience" aria-label="Relevant Professional Experience">
			<Timeline experiences={work} work />
		</section>

		<!-- Certificates -->
		<section class="experience" aria-labelledby="cert-title">
			<Timeline experiences={certificates} certificates />
		</section>

		<!-- Education -->
		<section class="experience" aria-labelledby="ed-title">
			<Timeline experiences={education} education />
		</section>
	</section>

	<div class="[ lg:grid-column ] [ flow ]">
		<!-- Skills -->
		<section class="skills [ tags-catalog extend ] [ lg:bg-none ]" aria-label="skills">
			{[...linq(skills)
				.groupBy(({ category, categoryTag }) => [category, categoryTag], {
					equals: ([a, b], [c, d]) => a === c && b === d,
					getHashCode: hash,
				})
				.select((g) => [g.key, g.select((s) => ({ tag: s.tag, name: s.name, keywords: s.keywords })).toArray()] as const)]
				.map(([[category, categoryTag], collectiveSkills]) => (
				<section class:list={["category", { extend: collectiveSkills.length > 1 }]} aria-labelledby={categoryTag}>
					<h2 id={categoryTag} class="heading__icon heading" data-icon={categoryTag}>
						{collectiveSkills.length === 1
							? collectiveSkills[0]?.name
							: collectiveSkills.length > 1
							? category
							: ''}
					</h2>{
						collectiveSkills.length === 1 ? <TagsCatalog labels={collectiveSkills[0]?.keywords ?? ''} />
						: collectiveSkills.length > 1 ?
							collectiveSkills.map((skill) => (
								<div class="sub-category" aria-labelledby={skill.tag}>
									<h3 id={skill.tag} class="subheading">{skill.name}:</h3>
									<TagsCatalog labels={skill.keywords.sort()} />
								</div>
							))
						: null
					}
				</section>
				))
			}
		</section>

		<!-- Interests -->
		<!-- {#if interests}
			<section
				class="interests [ tags-catalog ]"
				class:extend={interests.length > 1}
				aria-labelledby="interests-title"
			>
				<h2 id="interests-title" class="heading__icon heading" data-icon="interests">Interests</h2>
				{#if interests.length === 1}
					<TagsCatalog labels={interests[0]?.keywords ?? ''} />
				{:else if interests.length > 1}
					{#each interests as interest ((interest.tag = slug(interest.name)))}
						<div class="sub-category" aria-labelledby="{interest.tag}-title">
							<h4 id="{interest.tag}-title" class="subheading">{interest.name}:</h4>
							<TagsCatalog labels={interest.keywords} />
						</div>
					{/each}
				{/if}
			</section>
		{/if} -->

		<!-- Projects -->
		<section class="personal-projects [ flow ]" aria-labelledby="personal-projects-title">
			<h2 id="personal-projects-title" class="heading__icon heading" data-icon="personal-projects">Projects</h2>

			<ol class="project gallery">
				{projects.map(project => (
						<header>
							{project.url ?
								<a href={project.url} rel="external nofollow noopener noreferrer" target="blank">
									{project.name}
								</a> :
								<span>
									{project.name}
								</span>
							}
						</header>
						<div>
							<img alt="{project.name} screen-shot" />
						</div>
						<div>
							<p>
								{project.description}
							</p>
							<!-- project_used-technologies -->
						</div>
					))
				}
			</ol>
		</section>

		<!-- Mobile Contact Details -->
		<ContactDetails {...basics} aria-labelledby="details-title" data-visibility="mobile">
			<h2 id="details-title" class="heading__icon heading" data-icon="contact-details">Details</h2>
		</ContactDetails>
	</div>
</main>
</AppLayout>

<style lang="scss">
	@use 'sass:map';
	@use '@/styles/abstracts/colors' as *;

	main#resume.resume {
		--primary-color: #{map.get($light, 'primary')};
	}

	ol.project.gallery {
		margin-inline-start: var(--tiny-space);
	}

	@page {
		size: letter;
		margin: 0;
	}

	@media print {
		:global(.navbar) {
			display: none;
			visibility: hidden;
		}
	}
</style>